import { Button, Card, Input, Radio, Select, theme, Upload,} from "antd";
import { UploadOutlined } from "@ant-design/icons";
import { setTheme } from "../../store/settings/settingsSlice";
import { useAppDispatch } from "../../hooks/useAppDispatch";
import { useAppSelector } from "../../hooks/useAppSelector";
import { setPanelTransparency } from "../../store/settings/settingsSlice";
import { setLanguage } from "../../store/settings/settingsSlice";
const { Option } = Select;

const SettingsCard = () => {
    const panelTransparency = useAppSelector((state) => state.settings.panelTransparency);
    const language = useAppSelector((state) => state.settings.language);
    
    // –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ–º—ã
    const { token } = theme.useToken();
    const dispatch = useAppDispatch();

    // handlers
    const handleChangeThem = () => dispatch(setTheme());

    return (
        <div className="rounded-lg p-0 shadow-lg w-[50%]">
            <Card
                className=" text-white p-0  h-[100%]"
                title="–í–Ω–µ—à–Ω–∏–π –≤–∏–¥ —Å–∏—Å—Ç–µ–º—ã"
                bordered={false}
                style={{ backgroundColor: token.colorBgBase }}
            >
                <div className="mb-4">
                    <span className="block mb-2">–í—ã–±–µ—Ä–∏—Ç–µ —Ü–≤–µ—Ç–æ–≤—É—é —Å—Ö–µ–º—É:</span>
                    <Radio.Group className="space-x-4">
                        <Radio.Button value="dark" className="text-white" onClick={handleChangeThem}>
                            üåô
                        </Radio.Button>
                        <Radio.Button value="light" className="bg-gray-200" onClick={handleChangeThem}>
                            ‚òÄÔ∏è
                        </Radio.Button>
                    </Radio.Group>
                </div>

                <div className="mb-4">
                    <span className="block mb-2">–õ–µ–≤–∞—è –∏ –≤–µ—Ä—Ö–Ω—è—è –ø–∞–Ω–µ–ª—å:</span>
                    <Select
                        value={panelTransparency}
                        onChange={setPanelTransparency}
                        className="w-full text-white"
                    >
                        <Option value="transparent">–ü–æ–ª—É–ø—Ä–æ–∑—Ä–∞—á–Ω–∞—è</Option>
                        <Option value="solid">–ù–µ–ø—Ä–æ–∑—Ä–∞—á–Ω–∞—è</Option>
                    </Select>
                </div>

                <div className="mb-4">
                    <span className="block mb-2">–Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞:</span>
                    <Select
                        value={language}
                        onChange={setLanguage}
                        className="w-full text-white"
                    >
                        <Option value="–†—É—Å—Å–∫–∏–π">–†—É—Å—Å–∫–∏–π</Option>
                        <Option value="English">English</Option>
                    </Select>
                </div>

                <div className="mb-4">
                    <span className="block mb-2">–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ–Ω –¥–æ—Å–æ–∫:</span>
                    <div className="flex flex-col">
                        <Button type="primary">–ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–≤–æ–π —Ñ–æ–Ω</Button>
                        <Input.Search
                            placeholder="–ü–æ–∏—Å–∫ —Å—Ä–µ–¥–∏ –º–∏–ª–ª–∏–æ–Ω–∞ –∫–∞—Ä—Ç–∏–Ω–æ–∫"
                            enterButton="–ù–∞–π—Ç–∏"
                            className="text-white mt-3"
                        />
                    </div>
                </div>

                <div className="mb-4">
                    <Upload>
                        <Button icon={<UploadOutlined />}>
                            –ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                        </Button>
                    </Upload>
                </div>

                <div className="flex flex-wrap gap-2">
                    <div className="w-20 h-20 bg-green-500"></div>
                    <div className="w-20 h-20 bg-blue-500"></div>
                    <div className="w-20 h-20 bg-red-500"></div>
                    <div className="w-20 h-20 bg-yellow-500"></div>
                </div>
            </Card>
        </div>
    );
};

export default SettingsCard;